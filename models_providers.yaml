# Registered LLMs and Embeddings Services

# The class should be known in the llm.py' 


########################
# LLM Models and Provider
########################


# LLM_id should follow Python variables constraints - ie no '-' no space etc
# Use pattern {self.model_name}_{version}_{inference provider or library}
# model_name is provider specific.  It can contains several fields decoded in the factory.


llm:
  #####  OpenAI Models  ####
- cls: ChatOpenAI
  id: gpt_35_openai
  model: gpt-3.5-turbo-0125
- cls: ChatOpenAI
  id: gpt_4o_openai
  model: gpt-4o
- cls: ChatOpenAI
  id: gpt_4omini_openai
  model: gpt-4o-mini

#####  DeepInfra Models  ####
- cls: ChatDeepInfra
  id: llama31_70_deepinfra
  model: meta-llama/Meta-Llama-3.1-70B-Instruct
- cls: ChatDeepInfra
  id: llama31_8_deepinfra
  model: meta-llama/Meta-Llama-3.1-8B-Instruct
- cls: ChatDeepInfra
  id: mixtral_7x8_deepinfra
  model: mistralai/Mixtral-8x7B-Instruct-v0.1
- cls: ChatDeepInfra
  id: qwen2_70_deepinfra
  model: Qwen/Qwen2-72B-Instruct
- cls: ChatDeepInfra
  id: wizard2_8x22_deepinfra
  model: microsoft/WizardLM-2-8x22B

#####  Groq Models  ####
- cls: ChatGroq
  id: llama31_70_groq
  model: llama-3.1-70b-versatile
- cls: ChatGroq
  id: llama31_8_groq
  model: llama-3.1-8b-instant
- cls: ChatGroq
  id: mixtral_7x8_groq
  model: Mixtral-8x7b-32768

  
#####  Together.ai Models  ####
#see https://docs.together.ai/docs/inference-models
- id: llama31_70_together
  model: meta-llama/Meta-Llama-3.1-70B-Instruct-Turbo
  cls: ChatTogether
- id: qwen2_72_together
  model: Qwen/Qwen1.5-72B-Chat
  cls: ChatTogether
    


#####  GCP Models  ####
- cls: ChatVertexAI
  id: gemini_pro_google
  model: gemini-pro


#### Local models
- cls: ChatOllama
  id: llama31_8_local
  model: llama3.1

#####  Eden.ai Models  ####
# See https://app.edenai.run/bricks/text/chat 
# Does not support streaming for tools, so agent type cannot be "tool_calling"
- cls: ChatEdenAI
  id: gpt_4o_edenai
  model: openai/gpt-4o
  agent_builder: openai_tool
- cls: ChatEdenAI
  id: gpt_4_edenai
  model: openai/gpt-4
  agent_builder: openai_tool
- cls: ChatEdenAI
  id: gpt_4omini_edenai
  model: openai/gpt-4o-mini
  agent_builder: openai_tool
- cls: ChatEdenAI   # note: quite expensive 
  id: mistral_large_edenai
  model: mistral/large-latest
  agent_builder: openai_tool

#####  Azure Models  ####
- cls: AzureChatOpenAI
  id: gpt_4_azure
  model: gpt4-turbo/2023-05-15
- cls: AzureChatOpenAI
  id: gpt_35_azure
  model: gpt-35-turbo/2023-05-15
- cls: AzureChatOpenAI
  id: gpt_4o_azure
  model: gpt-4o/2024-05-13


########################
# Embeddings models 
########################

embeddings:
- id: ada_002_openai
  model: text-embedding-ada-002
  cls: OpenAIEmbeddings
  key: OPENAI_API_KEY

- id: embedding_001_google
  model: text-embedding-ada-002
  cls: GoogleGenerativeAIEmbeddings
  key: GOOGLE_API_KEY

- id: multilingual_MiniLM_local
  model: sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2
  cls: HuggingFaceEmbeddings
  key: 

- id: ada_002_edenai
  model: openai/1536__text-embedding-ada-002
  cls: EdenAiEmbeddings
  key: EDENAI_API_KEY

- id: mistral_1024_edenai
  model: mistral/1024__mistral-embed
  cls: EdenAiEmbeddings
  key: EDENAI_API_KEY

- id: camembert_large_local
  model: dangvantuan/sentence-camembert-large
  cls: HuggingFaceEmbeddings
  key: 

- id: solon-large
  model: OrdalieTech/Solon-embeddings-large-0.1
  cls: HuggingFaceEmbeddings
  key: 

- id: ada_002_azure
  model: text-embedding-ada-002/2023-05-15
  cls: AzureOpenAIEmbeddings
  key: AZURE_OPENAI_API_KEY=your_azure_openai_key_here
 



