# Configuration for the GenAI Blueprint project - an accelerator for building Generative AI applications
# Includes core dependencies, UI components, instrumentation, and demo capabilities

#cSpell: disable
[tool.poetry]
name = "genai-blueprint"
version = "0.1.2"
description = ""
authors = ["Thierry Caminel <thierry.caminel@eviden.com>"]
readme = "README.md"
requires-poetry = ">=2.0"
packages = [                                                                                                                                                
     { include = "python", from = "." }                                                                                                                      
 ]   
package-mode = false

[tool.poetry.urls]
Homepage = "https://github.com/tcaminel-pro/genai-blueprint"
Repository = "https://github.com/tcaminel-pro/genai-blueprint"

######################transformers
# Projet dependencies
######################transformers

#
# Core dependencies 
#
[tool.poetry.dependencies]
python = ">=3.12,<3.13"
pydantic = "^2.7.0"
devtools = "^0.12.2"
loguru = "^0.7.3"
typer = "^0.13.0"
tabulate = "^0.9.0"
python-dotenv = "^1.0.1"
json-repair = "^0.30.0"
fastapi = "^0.115.6"
langchain = "^0.3"
langchain-core = "^0.3"
langchain-community = "^0.3"
langchain-experimental = "^0.3"
langchain-openai = "^0.3"
langchain-huggingface = "^0.1"
langchain-ollama = "^0.2"
langchain-deepseek-official = "^0.1.0"
langchain-groq = "^0.2"
langchain-chroma = "^0.2"
langgraph = "^0.2"
langserve = "^0.3"
langchainhub = "^0.1"
chromadb = "^0.5"
#httpx = "^0.27.0"
litellm = "^1"

#
# Group 'instrumentation' 
#
azure-identity = "^1.19.0"


[tool.poetry.group.instrumentation.dependencies]
arize-phoenix = "^7.7"
opentelemetry-sdk = "^1"
openinference-instrumentation-langchain = "^0.1"
openinference-instrumentation-smolagents = "^0.1"
openinference-instrumentation-crewai = "^0.1"

#
# Group 'ui' (User Interface) 
#
[tool.poetry.group.ui.dependencies]
uvicorn = "^0.34.0"
sse-starlette = "^2.1.0"
streamlit = "^1.40"
st-cytoscape = "^0.0.5"
ipycytoscape = "^1.3.3"

#
# Group 'ai_extra' (extension to core)
#
[tool.poetry.group.ai_extra.dependencies]
gpt-researcher = "^0.10.11"
unidecode = "^1.3.8"
smolagents = "^1.4.1"
tavily-python = "^0.3.3"
duckduckgo-search = "^6.1.6"
mcpadapt = "^0.0.9"
#
# Group 'demos' (dependencies to run the demos)
#
[tool.poetry.group.demos.dependencies]
bs4 = "^0.0.2"
lark = "^1.1.9"
plotly = "^5.22.0"
yfinance = "^0.2.38"
rank-bm25 = "^0.2.2"
spacy = "^3.7.4"
matplotlib = "^3.9.0"
sqlalchemy = "^2.0.29"
abbreviations = "^0.2.5"
enchant = "^0.0.1"
pypdf = "^5.1.0"
giskard = "^2.15.5"
#crewai = {extras = ["tools"], version = "^0.95.0"}
ollama-ocr = "^0.1.3"
langchain-kuzu = "^0.3.0"
playwright = "^1.49.1"
#browser-use = "^0.1"
helium = "^5.1.0"
#
# Group 'autogen'
#
[tool.poetry.group.autogen.dependencies]
autogen-openaiext-client = "^0.0.3"
autogen-agentchat = "^0.4.3"
autogen-ext = {extras = ["openai"], version = "^0.4.3"}


#
# Group 'transformers'
#
[tool.poetry.group.transformers.dependencies]
langchain-huggingface = "^0.1.2"
sentence-transformers = "^2.6.1"
accelerate = "^0.30.1"

#
# Group 'dev' (dependencies for development + jupyter)
#
[tool.poetry.group.dev.dependencies]
ruff = "^0.9.1"
pytest = "^8.1.1"
ipykernel = "^6.29.4"
ipywidgets = "^8.1.2"
grandalf = "^0.8"
defusedxml = "^0.7.1"

###################
# Ruff linters settings
###################

[tool.ruff]
builtins = ["ic", "debug"]
line-length = 120  # default is 88

[tool.ruff.lint]
# Lint rule configuration:
select = [ 
    "E", # Pycodestyle errors (PEP 8 style violations)
    "F", # Pyflakes errors (basic syntax and logic errors)
    "I", # isort rules (import sorting)
    "W",  # Pycodestyle warnings (style issues that aren't errors)
    "B", # Bugbear - catches common bugs and anti-patterns                                                                                      
    # "N", # Naming conventions                                                                                                                                  
    "C", # Better comprehensions    
    "ASYNC", # Async 
   #  "ANN",  # Annotations
    "PIE",
    "PD",# Pandas
    "FURB" #refurbishing and modernizing
]

ignore = [ # Ignored linter rules: 
    "E501", #Line too long (we use 120 chars instead of default 88) 
    "W291", # Trailing whitespace 
    "B006", # Do not use mutable data structures for argument defaults
    "C901",   # Function is too complex , 
    "PD901" # pandas-df-variable-name'
 ]

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
pythonVersion = "3.12"
pythonPlatform = "Linux"
reportTypedDictNotRequiredAccess = false  # Avoid warnings in LangGraph

#########
# MISC
#########
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

