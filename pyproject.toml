[project]
name = "genai-blueprint"
version = "0.1.2"
description = ""
authors = [{ name = "Thierry Caminel", email = "thierry.caminel@eviden.com" }]
requires-python = ">=3.12,<3.13"
readme = "README.md"
dependencies = [
    "pydantic>=2.7.0,<3",
    "devtools>=0.12.2,<0.13",
    "loguru>=0.7.3,<0.8",
    "typer>=0.13.0,<0.14",
    "tabulate>=0.9.0,<0.10",
    "python-dotenv>=1.0.1,<2",
    "json-repair>=0.30.0,<0.31",
    "fastapi>=0.115.6,<0.116",
    "langchain>=0.3,<0.4",
    "langchain-core>=0.3,<0.4",
    "langchain-community>=0.3,<0.4",
    "langchain-experimental>=0.3,<0.4",
    "langchain-openai>=0.3,<0.4",
    "langchain-huggingface>=0.1,<0.2",
    "langchain-ollama>=0.2,<0.3",
    "langgraph>=0.2,<0.3",
    "langserve>=0.3,<0.4",
    "langchainhub>=0.1,<0.2",
    "langchain-groq>=0.2,<0.3",
    "langchain-chroma>=0.2,<0.3",
    "chromadb>=0.5,<0.6",
    "litellm>=1,<2",
    "omegaconf>=2.3.0",
    "langchain-deepseek>=0.1.2",
]

[project.urls]
Homepage = "https://github.com/tcaminel-pro/genai-blueprint"
Repository = "https://github.com/tcaminel-pro/genai-blueprint"

[tool.setuptools.packages.find]
where = ["./"]
include = ["python"]

# [project.scripts]
# run-module= "my_module.main:start"


[dependency-groups]
instrumentation = [
    "arize-phoenix~=7.7",
    "opentelemetry-sdk>=1,<2",
    "openinference-instrumentation-langchain>=0.1,<0.2",
    "openinference-instrumentation-smolagents>=0.1,<0.2",
    "openinference-instrumentation-crewai>=0.1,<0.2",
]
ui = [
    "uvicorn>=0.34.0,<0.35",
    "sse-starlette>=2.1.0,<3",
    "streamlit~=1.40",
    "st-cytoscape>=0.0.5,<0.0.6",
    "ipycytoscape>=1.3.3,<2",
]
ai_extra = [
    "gpt-researcher>=0.10.11,<0.11",
    "unidecode>=1.3.8,<2",
    "smolagents>=1.4.1,<2",
    "tavily-python>=0.3.3,<0.4",
    "duckduckgo-search>=6.1.6,<7",
    "mcpadapt>=0.0.9,<0.0.10",
]
demos = [
    "bs4>=0.0.2,<0.0.3",
    "lark>=1.1.9,<2",
    "plotly>=5.22.0,<6",
    "yfinance>=0.2.38,<0.3",
    "rank-bm25>=0.2.2,<0.3",
    "spacy>=3.7.4,<4",
    "matplotlib>=3.9.0,<4",
    "sqlalchemy>=2.0.29,<3",
    "abbreviations>=0.2.5,<0.3",
    "enchant>=0.0.1,<0.0.2",
    "pypdf>=5.1.0,<6",
    "giskard>=2.15.5,<3",
    "ollama-ocr>=0.1.3,<0.2",
    "langchain-kuzu>=0.3.0,<0.4",
    "playwright>=1.49.1,<2",
    "helium>=5.1.0,<6",
]
autogen = [
    "autogen-openaiext-client>=0.0.3,<0.0.4",
    "autogen-agentchat>=0.4.3,<0.5",
    "autogen-ext[openai]>=0.4.3,<0.5",
]
transformers = [
    "langchain-huggingface>=0.1.2,<0.2",
    "sentence-transformers>=2.6.1,<3",
    "accelerate>=0.30.1,<0.31",
]
dev = [
    "ruff>=0.9.1,<0.10",
    "pytest>=8.1.1,<9",
    "ipykernel>=6.29.4,<7",
    "ipywidgets>=8.1.2,<9",
    "grandalf>=0.8,<0.9",
    "defusedxml>=0.7.1,<0.8",
]

[tool.uv]
package = false
default-groups = [
    "instrumentation",
    "ui",
    "ai_extra",
    "demos",
    "autogen",
    "transformers",
    "dev",
]

[tool.hatch.build.targets.sdist]
include = ["./python"]

[tool.hatch.build.targets.wheel]
include = ["./python"]

[tool.hatch.build.targets.wheel.sources]
"./python" = "python"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
builtins = ["ic", "debug"]
line-length = 120  # default is 88

[tool.ruff.lint]
# Lint rule configuration:
select = [ 
    "E", # Pycodestyle errors (PEP 8 style violations)
    "F", # Pyflakes errors (basic syntax and logic errors)
    "I", # isort rules (import sorting)
    "W",  # Pycodestyle warnings (style issues that aren't errors)
    "B", # Bugbear - catches common bugs and anti-patterns                                                                                      
    # "N", # Naming conventions                                                                                                                                  
    "C", # Better comprehensions    
    "ASYNC", # Async 
    "ANN",  # Annotations
    "PIE",
    "PD",# Pandas
    "FURB" #refurbishing and modernizing
]

ignore = [ # Ignored linter rules: 
    "E501", #Line too long (we use 120 chars instead of default 88) 
    "W291", # Trailing whitespace 
    "B006", # Do not use mutable data structures for argument defaults
    "C901",   # Function is too complex , 
    "PD901", # pandas-df-variable-name',
    "ANN401",  # Annotated with Any
    "ANN003"  # Annotate **kwarg
 ]

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
pythonVersion = "3.12"
pythonPlatform = "Linux"
reportTypedDictNotRequiredAccess = false  # Avoid warnings in LangGraph


[project.scripts]
cli = "src.main.cli:main"
